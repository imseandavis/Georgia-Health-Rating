<File version="2.1">
  <FileID>9973f26e-e91e-4b06-ad7d-b6dc228937b3</FileID>
  <Preview>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
QCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqp
E8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACU
UkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqh
DACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCml
lDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oA
QCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqp
E8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACU
UkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqh
DACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCml
lDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oA
QCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqp
E8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACU
UkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqh
DACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE8oAQCmllDqhDACUUkqpE7olAkBQ
UBCGh4eVYVvTUUoppfTjqVarNz8A9PX1ISEhAePj45iZmVFWiFJKKaUbr9FotFk+b3gAkM7NzcFs
NsNkMkGv1ytphFJKKaUbqyz8Zbkry+G3y2aHBAB5GkJqaxyllFJKN05bhb/UIQGAUkoppVtLBgBK
KaXUCWUAoJRSSp1QBgBKKaXUCf2oAUDOjFJKKaVbX51mHqPTHyEAdI5olCRBKaWU0q3vqLB/XK2U
4esOAPKDUpkiKKWUUro9XC38PzgAUEoppXR7ancA8PX1K9etQPkApZRSSre3GgAZ2fnvDwB79+2r
zRQTJqVmKomBUkoppdtXWfhfCr/8/gBACCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCyCbxr/7V/w+qpVkoTEarVAAAAABJRU5E
rkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="GeorgiaHealthRatingForm" children="Controls">
    <Property name="AutoScaleDimensions">6, 13</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">853, 520</Property>
    <Property name="Name">GeorgiaHealthRatingForm</Property>
    <Property name="Text">Georgia Health Rating</Property>
    <Event name="Load">GeorgiaHealthRatingForm_Load</Event>
    <Object type="System.Windows.Forms.RichTextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="DebugConsole" children="Controls">
      <Property name="Location">12, 309</Property>
      <Property name="Name">DebugConsole</Property>
      <Property name="Size">829, 199</Property>
      <Property name="TabIndex">5</Property>
      <Property name="Text">
      </Property>
    </Object>
    <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="combobox2" children="Controls">
      <Property name="Enabled">False</Property>
      <Property name="FormattingEnabled">True</Property>
      <Property name="Location">450, 12</Property>
      <Property name="Name">combobox2</Property>
      <Property name="Size">391, 21</Property>
      <Property name="TabIndex">4</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="SearchGroup" children="Controls">
      <Property name="Location">12, 177</Property>
      <Property name="Name">SearchGroup</Property>
      <Property name="Size">412, 125</Property>
      <Property name="TabIndex">3</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Search</Property>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSearch" children="Controls">
        <Property name="Location">342, 44</Property>
        <Property name="Name">buttonSearch</Property>
        <Property name="Size">64, 20</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">Search</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonSearch_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="BusinessNameTextBox" children="Controls">
        <Property name="Location">145, 44</Property>
        <Property name="Name">BusinessNameTextBox</Property>
        <Property name="Size">192, 20</Property>
        <Property name="TabIndex">4</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="SearchByBusinessName" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">7, 47</Property>
        <Property name="Name">SearchByBusinessName</Property>
        <Property name="Size">135, 13</Property>
        <Property name="TabIndex">3</Property>
        <Property name="Text">Search By Business Name:</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="SearchByGradeButton" children="Controls">
        <Property name="Location">342, 17</Property>
        <Property name="Name">SearchByGradeButton</Property>
        <Property name="Size">64, 23</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Search</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">SearchByGradeButton_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="FoodGradeComboBox" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">All</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">A (90-100)</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">B (80-89)</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">C (70-79)</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">U (69 and Lower)</Item>
        </Property>
        <Property name="Location">145, 17</Property>
        <Property name="Name">FoodGradeComboBox</Property>
        <Property name="Size">192, 21</Property>
        <Property name="TabIndex">1</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="SearchByGradeLabel" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">50, 21</Property>
        <Property name="Name">SearchByGradeLabel</Property>
        <Property name="Size">94, 13</Property>
        <Property name="TabIndex">0</Property>
        <Property name="Text">Search By Grade: </Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
      <Property name="Location">12, 39</Property>
      <Property name="Name">groupbox1</Property>
      <Property name="Size">412, 131</Property>
      <Property name="TabIndex">2</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Health Department Contact Info</Property>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="FaxTextBox" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">74, 98</Property>
        <Property name="Name">FaxTextBox</Property>
        <Property name="Size">332, 20</Property>
        <Property name="TabIndex">6</Property>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="TelephoneTextBox" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">74, 72</Property>
        <Property name="Name">TelephoneTextBox</Property>
        <Property name="Size">332, 20</Property>
        <Property name="TabIndex">5</Property>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="AddressTextBox" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">74, 46</Property>
        <Property name="Name">AddressTextBox</Property>
        <Property name="Size">332, 20</Property>
        <Property name="TabIndex">4</Property>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="NameTextBox" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">74, 20</Property>
        <Property name="Name">NameTextBox</Property>
        <Property name="Size">332, 20</Property>
        <Property name="TabIndex">0</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelFax" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">41, 101</Property>
        <Property name="Name">labelFax</Property>
        <Property name="Size">27, 13</Property>
        <Property name="TabIndex">3</Property>
        <Property name="Text">Fax:</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelTelephone" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">7, 75</Property>
        <Property name="Name">labelTelephone</Property>
        <Property name="Size">61, 13</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Telephone:</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelAddress" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">20, 49</Property>
        <Property name="Name">labelAddress</Property>
        <Property name="Size">48, 13</Property>
        <Property name="TabIndex">1</Property>
        <Property name="Text">Address:</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelName" children="Controls">
        <Property name="AutoSize">True</Property>
        <Property name="Location">30, 23</Property>
        <Property name="Name">labelName</Property>
        <Property name="Size">38, 13</Property>
        <Property name="TabIndex">0</Property>
        <Property name="Text">Name:</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.DataVisualization.Charting.Chart, System.Windows.Forms.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="ScoreChart" children="Controls">
      <Property name="ChartAreas">
        <Item type="System.Windows.Forms.DataVisualization.Charting.ChartArea, System.Windows.Forms.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </Property>
      <Property name="Location">450, 39</Property>
      <Property name="Name">ScoreChart</Property>
      <Property name="Series">
        <Item type="System.Windows.Forms.DataVisualization.Charting.Series, System.Windows.Forms.DataVisualization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </Property>
      <Property name="Size">391, 259</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">ScoreChart</Property>
      <Property name="Visible">False</Property>
      <Serialize>
        <Chart Size="391, 259">
          <Series>
            <Series Name="Scores" ChartType="Spline" ChartArea="FoodScore">
              <Points>
                <DataPoint YValues="88" />
                <DataPoint YValues="93" />
                <DataPoint YValues="83" />
                <DataPoint YValues="96" />
                <DataPoint YValues="94" />
              </Points>
            </Series>
          </Series>
          <ChartAreas>
            <ChartArea Name="FoodScore">
              <AxisY Maximum="100" Minimum="70" />
            </ChartArea>
          </ChartAreas>
        </Chart>
      </Serialize>
    </Object>
    <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="CountyComboBox" children="Controls">
      <Property name="FormattingEnabled">True</Property>
      <Property name="Items">
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Appling</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Atkinson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bacon</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Baker</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Baldwin</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Banks</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Barrow*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bartow</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Ben Hill</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Berrien</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bibb</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bleckley</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Brantley</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Brooks</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bryan</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Bulloch</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Burke</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Butts</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Calhoun</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Camden</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Candler</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Carroll</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Catoosa</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Charlton</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Chatham</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Chattahoochee</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Chattooga</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Cherokee</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Clarke*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Clay</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Clayton</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Clinch</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Cobb</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Coffee</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Colquitt</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Columbia</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Cook</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Coweta</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Crawford</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Crisp</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xml:space="preserve"> 	Dade</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Dawson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Decatur</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">DeKalb*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Dodge</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Dooly</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Dougherty</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Douglas</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Early</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Echols</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Effingham</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Elbert*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Emanuel</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Evans</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Fannin</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Fayette</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Floyd</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Forsyth</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Franklin</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Fulton</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Gilmer</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Glascock</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Glynn</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Gordon</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Grady</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Greene*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Gwinnett*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Habersham</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Hall</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Hancock</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Haralson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Harris*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Hart</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Heard</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Henry</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Houston</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Irwin</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Jackson*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Jasper</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Jeff Davis</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xml:space="preserve"> 	Jefferson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Jenkins</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Johnson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Jones</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lamar</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lanier</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Laurens</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lee</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Liberty</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lincoln</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Long</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lowndes</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Lumpkin</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Macon</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Madison*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Marion</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">McDuffie</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">McIntosh</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Meriwether</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Miller</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Mitchell</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Monroe</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Montgomery</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Morgan*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Murray</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Muscogee</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Newton</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Oconee*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Oglethorpe*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Paulding</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Peach</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Pickens</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Pierce</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Pike</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Polk</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Pulaski</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Putnam</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Quitman</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Rabun</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Randolph</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Richmond</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Rockdale</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Schley</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Screven</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Seminole</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Spalding</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Stephens</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Stewart</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Sumter</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Talbot</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Taliaferro</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Tattnall</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Taylor</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Telfair</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Terrell</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Thomas</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Tift</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Toombs</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Towns</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Treutlen</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Troup</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Turner</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Twiggs</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Union</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Upson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Walker</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Walton*</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Ware</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Warren</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Washington</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Wayne</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Webster</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Wheeler</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">White</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Whitfield</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Wilcox</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Wilkes</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Wilkinson</Item>
        <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Worth</Item>
      </Property>
      <Property name="Location">12, 12</Property>
      <Property name="Name">CountyComboBox</Property>
      <Property name="Size">412, 21</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">Pick A County To Search...</Property>
      <Event name="SelectedIndexChanged">CountyComboBox_SelectedIndexChanged</Event>
    </Object>
  </Object>
  <Code><![CDATA[
$GeorgiaHealthRatingForm_Load={
	#TODO: Initialize Form Controls here
	
}

#region Control Helper Functions
function Update-Chart
{
<#
	.SYNOPSIS
		This functions helps you plot points on a chart
	
	.DESCRIPTION
		Use the function to plot points on a chart or add more charts to a chart control
	
	.PARAMETER ChartControl
		The Chart Control you when to add points to
	
	.PARAMETER XPoints
		Set the X Axis Points. These can be strings or numerical values.
	
	.PARAMETER YPoints
		Set the Y Axis Points. These can be strings or numerical values.
	
	.PARAMETER XTitle
		Set the Title for the X Axis.
	
	.PARAMETER YTitle
		Set the Title for the Y Axis.
	
	.PARAMETER Title
		Set the Title for the chart.
	
	.PARAMETER ChartType
		Set the Style of the chart. See System.Windows.Forms.DataVisualization.Charting.SeriesChartType Enum
	
	.PARAMETER SeriesIndex
		Set the settings of a particular Series and corresponding ChartArea
	
	.PARAMETER TitleIndex
		Set the settings of a particular Title
	
	.PARAMETER SeriesName
		Set the settings of a particular Series using its name and corresponding ChartArea.
		The Series will be created if not found.
		If SeriesIndex is set, it will replace the Series' name if the Series does not exist
	
	.PARAMETER Enable3D
		The chart will be rendered in 3D.
	
	.PARAMETER Disable3D
		The chart will be rendered in 2D.
	
	.PARAMETER AppendNew
		When this switch is used, a new ChartArea is added to Chart Control.
	
	.NOTES
		Additional information about the function.
	
	.LINK
		http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
#>
	
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Windows.Forms.DataVisualization.Charting.Chart]
		$ChartControl,
		[Parameter(Mandatory = $true,
				   Position = 2)]
		[ValidateNotNull()]
		$XPoints,
		[Parameter(Mandatory = $true,
				   Position = 3)]
		$YPoints,
		[Parameter(Mandatory = $false,
				   Position = 4)]
		[string]
		$XTitle,
		[Parameter(Mandatory = $false,
				   Position = 5)]
		[string]
		$YTitle,
		[Parameter(Mandatory = $false,
				   Position = 6)]
		[string]
		$Title,
		[Parameter(Mandatory = $false,
				   Position = 7)]
		[System.Windows.Forms.DataVisualization.Charting.SeriesChartType]
		$ChartType,
		[Parameter(Mandatory = $false,
				   Position = 8)]
		$SeriesIndex = '-1',
		[Parameter(Mandatory = $false,
				   Position = 9)]
		$TitleIndex = '0',
		[Parameter(Mandatory = $false)]
		[string]
		$SeriesName = $null,
		[switch]
		$Enable3D,
		[switch]
		$Disable3D,
		[switch]
		$AppendNew
	)
	
	$ChartAreaIndex = 0
	if ($AppendNew)
	{
		$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
		$ChartArea = $ChartControl.ChartAreas.Add($name)
		$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		
		$name = "Series " + ($ChartControl.Series.Count + 1).ToString();
		$Series = $ChartControl.Series.Add($name)
		$SeriesIndex = $ChartControl.Series.Count - 1
		
		$Series.ChartArea = $ChartArea.Name
		
		if ($Title)
		{
			$name = "Title " + ($ChartControl.Titles.Count + 1).ToString();
			$TitleObj = $ChartControl.Titles.Add($Title)
			$TitleIndex = $ChartControl.Titles.Count - 1
			$TitleObj.DockedToChartArea = $ChartArea.Name
			$TitleObj.IsDockedInsideChartArea = $false
		}
	}
	else
	{
		if ($ChartControl.ChartAreas.Count -eq 0)
		{
			$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
			[void]$ChartControl.ChartAreas.Add($name)
			$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		}
		
		if ($ChartControl.Series.Count -eq 0)
		{
			if (-not $SeriesName)
			{
				$SeriesName = "Series " + ($ChartControl.Series.Count + 1).ToString();
			}
			
			$Series = $ChartControl.Series.Add($SeriesName)
			$SeriesIndex = $ChartControl.Series.Count - 1
			$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
		}
		elseif ($SeriesName)
		{
			$Series = $ChartControl.Series.FindByName($SeriesName)
			
			if ($null -eq $Series)
			{
				if (($SeriesIndex -gt -1) -and ($SeriesIndex -lt $ChartControl.Series.Count))
				{
					$Series = $ChartControl.Series[$SeriesIndex]
					$Series.Name = $SeriesName
				}
				else
				{
					$Series = $ChartControl.Series.Add($SeriesName)
					$SeriesIndex = $ChartControl.Series.Count - 1
				}
				
				$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
			}
			else
			{
				$SeriesIndex = $ChartControl.Series.IndexOf($Series)
				$ChartAreaIndex = $ChartControl.ChartAreas.IndexOf($Series.ChartArea)
			}
		}
	}
	
	if (($SeriesIndex -lt 0) -or ($SeriesIndex -ge $ChartControl.Series.Count))
	{
		$SeriesIndex = 0
	}
	
	$Series = $ChartControl.Series[$SeriesIndex]
	$Series.Points.Clear()
	$ChartArea = $ChartControl.ChartAreas[$Series.ChartArea]
	
	if ($Enable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $true
	}
	elseif ($Disable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $false
	}
	
	if ($Title)
	{
		if ($ChartControl.Titles.Count -eq 0)
		{
			#$name = "Title " + ($ChartControl.Titles.Count + 1).ToString();
			$TitleObj = $ChartControl.Titles.Add($Title)
			$TitleIndex = $ChartControl.Titles.Count - 1
			$TitleObj.DockedToChartArea = $ChartArea.Name
			$TitleObj.IsDockedInsideChartArea = $false
		}
		
		$ChartControl.Titles[$TitleIndex].Text = $Title
	}
	
	if ($ChartType)
	{
		$Series.ChartType = $ChartType
	}
	
	if ($XTitle)
	{
		$ChartArea.AxisX.Title = $XTitle
	}
	
	if ($YTitle)
	{
		$ChartArea.AxisY.Title = $YTitle
	}
	
	if ($XPoints -isnot [Array] -or $XPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($XPoints)
		$XPoints = $array
	}
	
	if ($YPoints -isnot [Array] -or $YPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($YPoints)
		$YPoints = $array
	}
	
	$Series.Points.DataBindXY($XPoints, $YPoints)
}


function Clear-Chart
{
<#
	.SYNOPSIS
		This function clears the contents of the chart

	.DESCRIPTION
		Use the function to remove contents from the chart control

	.PARAMETER  ChartControl
		The Chart Control to clear

	.PARAMETER  LeaveSingleChart
		Leaves the first chart and removes all others from the control
	
	.LINK
		http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
#>
	Param (	
	[ValidateNotNull()]
	[Parameter(Position=1,Mandatory=$true)]
  	[System.Windows.Forms.DataVisualization.Charting.Chart]$ChartControl
	,
	[Parameter(Position=2, Mandatory=$false)]
	[Switch]$LeaveSingleChart
	)
	
	$count = 0	
	if($LeaveSingleChart)
	{
		$count = 1
	}
	
	while($ChartControl.Series.Count -gt $count)
	{
		$ChartControl.Series.RemoveAt($ChartControl.Series.Count - 1)
	}
	
	while($ChartControl.ChartAreas.Count -gt $count)
	{
		$ChartControl.ChartAreas.RemoveAt($ChartControl.ChartAreas.Count - 1)
	}
	
	while($ChartControl.Titles.Count -gt $count)
	{
		$ChartControl.Titles.RemoveAt($ChartControl.Titles.Count - 1)
	}
	
	if($ChartControl.Series.Count -gt 0)
	{
		$ChartControl.Series[0].Points.Clear()
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
}
#endregion

$CountyComboBox_SelectedIndexChanged={
	
	#Lookup County And Return The County Health Department Contact Info
	$ContactInfo = Invoke-WebRequest -Method GET -URI "http://ga.healthinspections.us/georgia/search.cfm?county=$($CountyComboBox.Text)"
	
	$ContactInfo
	#Parse The County Health Department Contact Info
	If ($($ContactInfo.StatusCode) -eq 200)
	{
		#Regex Hack To Get The Right Data Back
		$HealthDepartmentContactInfo = (((($ContactInfo.AllElements | Where Class -eq 'body' | Select -First 1).Outertext) -Split "office:" | Select -Skip 1).Trim().TrimEnd('"')).Split("`n")
	}

	#Update Health Department Info Fields
	$NameTextBox.Text = $HealthDepartmentContactInfo[0]
	$AddressTextBox.Text = $HealthDepartmentContactInfo[1].ToString()
	$TelephoneTextBox.Text = $HealthDepartmentContactInfo[2].ToString().Split(':')[1].Trim()
	$FaxTextBox.Text = $HealthDepartmentContactInfo[3].ToString().Split(':')[1].Trim()
	
}

$SearchByGradeButton_Click={
	
	#Lookup All Companies By Food Grade
	$FoodGradeMasterList=@()
	$FoodGradeResults = Invoke-WebRequest -Method GET -URI "http://ga.healthinspections.us/georgia/search.cfm?start=1&f=s&county=$($CountyComboBox.Text)&InspectionType=Food&GradeLetter=$($FoodGradeComboBox.Text)"
	$FoodGradeSearchResults1 = ($FoodGradeResults.ParsedHTML.getElementsByTagName('span') | Select -Skip 2 -First 1).innerText.Split("`n")
	$(($FoodGradeResults.ParsedHTML.getElementsByTagName('span') | Select -Skip 2 -First 1).innerText) | Out-File C:\tmp\test2.txt
	$FoodGradeSearchResults = Get-Content C:\tmp\test2.txt
	
	#Split The Results Into Seperate Objects
	$FoodGradeMasterList = @()
	$BlankLine = $false
	$tline = ''
	
	Foreach ($LocationResult in $FoodGradeSearchResults1)
	{
		if ($LocationResult -eq '' -and $BlankLine -ne '')
		{
			$FoodGradeMasterList += $tline
			$tline = $null
		}
		else
		{
			$tline = $tline + "`n" + $LocationResult
		}
		$BlankLine = $LocationResult
		
		$Scores = ""
		$ObjectLength = $($tline.Trim().Split("`n")).Length
		$FoodGradeTempRecord = New-Object -TypeName PSObject
		$FoodGradeTempRecord | Add-Member -MemberType NoteProperty -Name BusinessName -Value $($tline.Trim().Split("`n"))[0]
		$FoodGradeTempRecord | Add-Member -MemberType NoteProperty -Name BusinessAddress -Value $($tline.Trim().Split("`n"))[1]
		foreach ($Item in $(($tline.Trim().Split("`n"))[3 .. $($ObjectLength)]))
		{
			$Scores += $Item.Split(":")[1].Split(',')[0].Trim() + ","
		}
		$Scores = $Scores.TrimEnd(',')
		$FoodGradeTempRecord | Add-Member -MemberType NoteProperty -Name FoodScores -Value $Scores
	}
	#$FoodGradeMasterList += $tline
	
	#$DebugConsole.Text += $tline
	
	
	$DebugConsole.Text += $FoodGradeTempRecord
	
	#$FoodGradeMasterList += $FoodGradeTempRecord
	#$DebugConsole.Text += $FoodGradeMasterList
	
	#Populate The Combo Box With Businesses
	#Foreach ($Line in $FoodGradeSearchResults)
	#{
	#	$DebugConsole.Text += $Line
	#	$FoodGradeTempRecord = New-Object -TypeName PSObject
	#	$FoodGradeTempRecord | Add-Member -MemberType NoteProperty -Name BusinessName -Value Line 
	#	
	#	$FoodGradeMasterList += $FoodGradeTempRecord
	#}

	#Count How Manay Pages There Are
	
	#Loop Thorugh And Build Master Result Array
}

$buttonSearch_Click={
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>